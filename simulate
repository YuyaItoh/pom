#!/bin/sh

# ヘルプ
if [[ ${1} = "-h" ]]; then
cat <<EOT
# ==============================================================
# それぞれのエージェントでシミュレーションを実行するスクリプト
# runコマンドのパスが通っていることが前提
# runコマンドはJavaのプロジェクトディレクトリに格納
#
# [引数]
# $1: 環境ファイル名
# $2: シミュレーションの回数
# $3: Dif, Equalエージェントにおけるタスクの反復数
# 
# [使用例]
# + test.environmentのシミュレーション
# + シミュレーション回数は5
# + HITsの反復数は3
# simulate test.environment 5 3
# ==============================================================
EOT
exit 1
fi

# 
# Preparation --------------------------------------------------
# 

# 環境ファイルからbasenameとdirnameを取得
basename=`basename $1 .environment`
dirname=`dirname $1`

# コマンドライン引数の処理
sim_num=$2
iteration=$3

# 環境ファイル，policyファイル，pomdpファイルの準備
environment=${dirname}/${basename}.environment
policy=${dirname}/${basename}.policy
policy_json=${policy}.json
pomdp=${dirname}/${basename}.pomdp



# 
# Error Handling -----------------------------------------------
# 

# pomdpファイルを未作成の場合
if [[ ! -f $pomdp ]]; then
    echo "[ERROR] POMDPファイルがありません．作成してください" >&2
    exit 1
fi

# zmdpを未実行の場合
if [[ ! -f $policy ]]; then
    echo "[ERROR] Policyファイルがありません．zmdpで作成してください" >&2
    exit 1
fi

# xxx.policy.jsonが存在しない場合は作成
if [[ ! -f $policy_json ]]; then
  echo "[NOTIFICATION policy.jsonが無いので作成します" >&2
  jconvert $policy
fi


# 
# Simulation ---------------------------------------------------
# 

# シミュレーションの実行
a=0
while [ $a -ne ${sim_num} ]
do
    echo "== [START] ${a}th simulation"
    a=`expr $a + 1`

    # Queue.confの作成と実行
    queue=${dirname}/queue${a}.conf
    run -m queue -e ${environment} -q ${queue}

    # Equalシミュレーション
    run -m simulation --environment ${environment} --agent equal --iteration ${iteration} --queue ${queue}

    # Difシミュレーション
    run -m simulation --environment ${environment} --agent dif --iteration ${iteration} --queue ${queue}

    # Pomdpシミュレーション
    run -m simulation --environment ${environment} --agent pomdp --pomdp ${pomdp} --policy ${policy_json} --queue ${queue}

    echo "== [END] ${a}th simulation"
done
